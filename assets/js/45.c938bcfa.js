(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{595:function(t,s,a){"use strict";a.r(s);var n=a(17),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"一-网络模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一-网络模型"}},[t._v("#")]),t._v(" 一. 网络模型")]),t._v(" "),a("h3",{attrs:{id:"_1-osi-七层模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-osi-七层模型"}},[t._v("#")]),t._v(" 1. OSI 七层模型")]),t._v(" "),a("ul",[a("li",[t._v("第 7 层应用层：为操作系统或网络应用程序提供访问网络服务的接口。\n"),a("ul",[a("li",[t._v("协议包括：https、http、ftp、telnet、ssh、smtp、pops、dns 等")]),t._v(" "),a("li",[t._v("html")])])]),t._v(" "),a("li",[t._v("第 6 层表示层：把数据转换为接受者能够兼容并且传输的内容，比如数据加密、压缩、格式转换等。")]),t._v(" "),a("li",[t._v("第 5 层会话层：负责数据传输中设置和维持网络设置直接的通讯连接。管理主机之间的会话进程，还可以利用在数据中插入校验点来实现数据同步。")]),t._v(" "),a("li",[t._v("第 4 层传输层：把传输表头加至数据形成数据包，完成端到端的数据传输，传输表头包含协议等信息。\n"),a("ul",[a("li",[t._v("协议包括：tcp、udp 协议")])])]),t._v(" "),a("li",[t._v("第 3 层网络层：负责对子网间的数据包进行寻址和路由选择，还可以实现阻塞控制和网际互联等功能。\n"),a("ul",[a("li",[t._v("协议包括：ip、ipx 等")]),t._v(" "),a("li",[t._v("路由器")])])]),t._v(" "),a("li",[t._v("第 2 层数据链路层：在物理介质上提供可靠的传输，包括物理地址寻址、数据封装成帧、流量控制、数据校验、重发等\n"),a("ul",[a("li",[t._v("交互机")])])]),t._v(" "),a("li",[t._v("第 1 层物理层：在局域网传输数据帧，负责电脑通讯设备和网络媒体之间的互通，包括针脚、电压、线缆规范、集线器、网卡、主机适配。")])]),t._v(" "),a("p",[a("strong",[t._v("html 在哪一层： 应用层")])]),t._v(" "),a("h3",{attrs:{id:"_2-tcp-ip-参考模型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-tcp-ip-参考模型"}},[t._v("#")]),t._v(" 2. TCP/IP 参考模型")]),t._v(" "),a("ul",[a("li",[t._v("应用层：应用层、表示层、会话层")]),t._v(" "),a("li",[t._v("传输层：传输层")]),t._v(" "),a("li",[t._v("网络层：网络层")]),t._v(" "),a("li",[t._v("链路层：数据链路层、物理层")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/myblog/images/tcp-ip.png",alt:"TCP/IP"}})]),t._v(" "),a("h3",{attrs:{id:"_3-常见面试题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-常见面试题"}},[t._v("#")]),t._v(" 3. 常见面试题")]),t._v(" "),a("h4",{attrs:{id:"_3-1-协议是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-协议是什么"}},[t._v("#")]),t._v(" 3.1 协议是什么？")]),t._v(" "),a("p",[t._v("定义每一层的作用和职责，类似于规范。")]),t._v(" "),a("h4",{attrs:{id:"_3-2-tcp-ip-协议具体指什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-tcp-ip-协议具体指什么"}},[t._v("#")]),t._v(" 3.2 TCP/IP 协议具体指什么？")]),t._v(" "),a("p",[t._v("互联网通讯所需要的协议家族，以 TCP、IP 为核心，包含 HTTP、SMTP、TELNET 等各种协议")]),t._v(" "),a("h4",{attrs:{id:"_3-3-数据包是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-数据包是什么"}},[t._v("#")]),t._v(" 3.3 数据包是什么？")]),t._v(" "),a("p",[a("strong",[t._v("网络层及以上分层中包的单位。")]),t._v(" 每个分层都会对发送的数据添加一个首部，首部包含了该层协议相关的信息，真正发送的内容称为数据，即每个数据包为首部+数据。对于下层来说，上层发送的全部内容，都会被当作本层的数据。")]),t._v(" "),a("ul",[a("li",[t._v("传输层 TCP 包：TCP 包首部 + 数据")]),t._v(" "),a("li",[t._v("网络层 IP 包：IP 包首部 + （TCP 包首部 + 数据）")]),t._v(" "),a("li",[t._v("数据链路层以太网包：以太网包首部 + （IP 包首部 + （TCP 包首部 + 数据））")])]),t._v(" "),a("h4",{attrs:{id:"_3-4-每次在接收数据后除了添加首部还会做什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-每次在接收数据后除了添加首部还会做什么"}},[t._v("#")]),t._v(" 3.4 每次在接收数据后除了添加首部还会做什么？")]),t._v(" "),a("p",[t._v("用户 1")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("传输层：TCP 模块为保证数据的可靠传输, 需要添加 TCP 首部")])]),t._v(" "),a("li",[a("p",[t._v("网络层：IP 包生成后，参考路由控制表决定接受此 IP 包的路由或主机。")])]),t._v(" "),a("li",[a("p",[t._v("数据链路层：生成的以太网数据包将通过物理层传输给接收端\n用户 2")])]),t._v(" "),a("li",[a("p",[t._v("数据链路层：主机收到以太网包后，首先从以太网包首部找到 MAC 地址判断是否为发送给自己的包，若不是则丢弃数据。 如果是发送给自己的包，则从以太网包首部中的类型确定数据类型，再传给相应的模块，比如 IP.")])]),t._v(" "),a("li",[a("p",[t._v("网络层：从包首部中判断此 IP 地址是否与自己的 IP 地址匹配，如果匹配则根据首部的协议类型将数据发送给对应的模块，比如 TCP")])]),t._v(" "),a("li",[a("p",[t._v("传输层：在 TCP 模块中，首先会计算一下校验和，判断数据是否被破坏。然后检查是否在按照顺序接收数据。最后检查端口号，确定具体的应用程序。数据被完整地接收以后，会传给由端口号识别的应用程序。")])])]),t._v(" "),a("p",[t._v("总结一下几个地址：")]),t._v(" "),a("ul",[a("li",[t._v("数据链路层的是 MAC 地址, 用来识别同一链路中的不同计算机")]),t._v(" "),a("li",[t._v("网络层的是 IP 地址, 用来识别 TCP/IP 网络中互连的主机和路由器")]),t._v(" "),a("li",[t._v("传输层的是端口号(程序地址), 用来识别同一台计算机中进行通信的不同应用程序")])]),t._v(" "),a("h4",{attrs:{id:"_3-5-通过-mac-地址、ip-地址、端口号是否可识别一次通讯"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-通过-mac-地址、ip-地址、端口号是否可识别一次通讯"}},[t._v("#")]),t._v(" 3.5 通过 MAC 地址、IP 地址、端口号是否可识别一次通讯？")]),t._v(" "),a("p",[t._v("答案是否定的，我们需要通过以下这几个数据综合来识别一次通信：")]),t._v(" "),a("ul",[a("li",[t._v("IP 首部：源 IP 地址")]),t._v(" "),a("li",[t._v("IP 首部：目标 IP 地址")]),t._v(" "),a("li",[t._v("协议号, TCP 或者 UDP")]),t._v(" "),a("li",[t._v("TCP 首部：源端口号")]),t._v(" "),a("li",[t._v("TCP 首部：目标端口号")])]),t._v(" "),a("h2",{attrs:{id:"二-tcp-和-udp-协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二-tcp-和-udp-协议"}},[t._v("#")]),t._v(" 二. TCP 和 UDP 协议")]),t._v(" "),a("h3",{attrs:{id:"_1-区别和场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-区别和场景"}},[t._v("#")]),t._v(" 1. 区别和场景")]),t._v(" "),a("p",[t._v("传输层协议：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("UDP 是⽆连接的，TCP 必须三次握⼿建⽴连接")])]),t._v(" "),a("li",[a("p",[t._v("UDP 是⾯向报⽂，没有拥塞控制，所以速度快，适合多媒体通信要求，⽐如及时聊天，⽀持⼀对⼀，⼀对多，多对⼀，多对多。就像⽜客⽹的视频⾯试就是⽤的 UDP")])]),t._v(" "),a("li",[a("p",[t._v("TCP 只能是⼀对⼀的可靠性传输")])])]),t._v(" "),a("h3",{attrs:{id:"_2-tcp-协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-tcp-协议"}},[t._v("#")]),t._v(" 2. TCP 协议")]),t._v(" "),a("h4",{attrs:{id:"_2-1-怎么保证其可靠性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-怎么保证其可靠性"}},[t._v("#")]),t._v(" 2.1 怎么保证其可靠性?")]),t._v(" "),a("ul",[a("li",[t._v("超时重发，发出报文端要是没有收到及时的确认，会重发")]),t._v(" "),a("li",[t._v("数据包的校验，校验首部数据和")]),t._v(" "),a("li",[t._v("对失序的数据重新排序")]),t._v(" "),a("li",[t._v("进行流量控制，防止缓冲区溢出")]),t._v(" "),a("li",[t._v("快重传和快恢复")]),t._v(" "),a("li",[t._v("TCP 会将数据截断为合理的长度")])]),t._v(" "),a("h4",{attrs:{id:"_2-2-拥堵控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-拥堵控制"}},[t._v("#")]),t._v(" 2.2 拥堵控制")]),t._v(" "),a("p",[t._v("拥塞控制就是防止过多的数据注入网络中，这样可以使网络中的路由器或链路不致过载。")]),t._v(" "),a("p",[t._v("发送方维持一个叫做拥塞窗口 cwnd（congestion window）的状态变量和慢开始门限 ssthresh 状态变量：初始设置 ssthresh=16，cwnd=1.")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("当 cwnd<ssthresh 时，使⽤慢开始算法，也就是乘法算法，拥塞窗口 cwnd 随着传输次数按指数规律增长。")])]),t._v(" "),a("li",[a("p",[t._v("当 cwnd=ssthresh 时，慢开始与拥塞避免算法任意。")])]),t._v(" "),a("li",[a("p",[t._v("当 cwnd>ssthresh 时，改⽤拥塞避免算法，也就是加法算法，拥塞窗口按线性规律增长。")])]),t._v(" "),a("li",[a("p",[t._v("当出现拥塞的时候就把新的门限值 ssthresh 设为此时窗口大小 cwnd 的一半，窗口大小设置为 1，再重新执行上面的步骤。eg：cwnd 为 24 时拥堵，设置 ssthresh 为 12，cwnd 为 1，再开始慢开始算法。")])]),t._v(" "),a("li",[a("p",[t._v("当收到连续三个重传的时候这就需要快重传和快恢复了，当收到连续三个重传，这个时候发送方就要重传自己的信息，然后门限 ssthresh 减半，但是这个时候并不是网络阻塞，窗口 cwnd 只会减半，执行拥塞避免算法。")])])]),t._v(" "),a("h4",{attrs:{id:"_2-3-三次握手-四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-三次握手-四次挥手"}},[t._v("#")]),t._v(" 2.3 三次握手，四次挥手")]),t._v(" "),a("ol",[a("li",[t._v("第⼀次握⼿：客户端发送连接请求报⽂段，将 SYN 位置为 1，Sequence Number 为 x；然后，客户端进⼊ SYN_SENT 状态，等待服务器的确认；")]),t._v(" "),a("li",[t._v("第⼆次握⼿：服务器收到客户端的 SYN 报⽂段，需要对这个 SYN 报⽂段进⾏确认，设置 Acknowledgment Number 为 x+1(Sequence Number+1)；同时，⾃⼰还要发送 SYN 请求信息，将 SYN 位置为 1，Sequence Number 为 y；服务器端将上述的 SYN+ACK 报⽂段⼀并发送给客户端，此时服务器进⼊ SYN_RCVD 状态；")]),t._v(" "),a("li",[t._v("第三次握⼿：客户端收到服务器的 SYN+ACK 报⽂段。然后将 Acknowledgment Number 设置为 y+1，向服务器发送 ACK 报⽂段，这个报⽂段发送完毕以后，客户端和服务器端都进⼊ ESTABLISHED 状态，完成 TCP 三次握⼿。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/myblog/images/tcp-three.jpg",alt:"TCP"}})]),t._v(" "),a("p",[t._v("四次挥手")]),t._v(" "),a("ol",[a("li",[t._v("第一次挥手是浏览器发完数据后，发送 FIN 请求断开连接，Client 端进入 FIN_WAIT_1 状态")]),t._v(" "),a("li",[t._v("第二次挥手是服务器收到 FIN 报文，返回 ACK 报文段表示同意，Client 端进入 FIN_WAIT_2 状态")]),t._v(" "),a("li",[t._v("第三次挥手是服务器发送 FIN 报文段，请求关闭连接，Client 端进入 LAST_ACK 状态")]),t._v(" "),a("li",[t._v("第四次挥手是浏览器收到 FIN 报文段，向服务器发送 ACK 报文段，Client 端进入 TIME_WAIT 状态。服务器接收到 ACK 报文关闭连接，浏览器等待一段时间后，表示服务器已关闭连接，也关闭连接。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/myblog/images/tcp-four.jpg",alt:"TCP"}})]),t._v(" "),a("p",[t._v("详细版四次挥手")]),t._v(" "),a("ul",[a("li",[t._v("第一次挥手：主机 1（可以使客户端，也可以是服务器端），设置 Sequence Number 和 Acknowledgment Number，向主机 2 发送一个 FIN 报文段；此时，主机 1 进入 FIN_WAIT_1 状态；这表示主机 1 没有数据要发送给主机 2 了；")]),t._v(" "),a("li",[t._v("第二次挥手：主机 2 收到了主机 1 发送的 FIN 报文段，向主机 1 回一个 ACK 报文段，Acknowledgment Number 为 Sequence Number 加 1；主机 1 进入 FIN_WAIT_2 状态；主机 2 告诉主机 1，我“同意”你的关闭请求；")]),t._v(" "),a("li",[t._v("第三次挥手：主机 2 向主机 1 发送 FIN 报文段，请求关闭连接，同时主机 2 进入 LAST_ACK 状态；")]),t._v(" "),a("li",[t._v("第四次挥手：主机 1 收到主机 2 发送的 FIN 报文段，向主机 2 发送 ACK 报文段，然后主机 1 进入 TIME_WAIT 状态；主机 2 收到主机 1 的 ACK 报文段以后，就关闭连接；此时，主机 1 等待 2MSL 后依然没有收到回复，则证明 Server 端已正常关闭，那好，主机 1 也可以关闭连接了。")])]),t._v(" "),a("h2",{attrs:{id:"三-ip-地址"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-ip-地址"}},[t._v("#")]),t._v(" 三. IP 地址")]),t._v(" "),a("h3",{attrs:{id:"网络层协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#网络层协议"}},[t._v("#")]),t._v(" 网络层协议")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("IP 地址（IPv4 地址）由 32 位正整数来表示，在计算机内部以二进制方式被处理。")]),t._v(" "),a("ul",[a("li",[t._v("将 32 位的 IP 地址以每 8 位为一组，分成 4 组，每组以 “.” 隔开，再将每组数转换成十进制数（0-255）。")]),t._v(" "),a("li",[t._v("IP 地址包含网络标识和主机标识，eg：172.112.110.11，172.112.110 就是网络标识,，同一网段内网络标识必须相同。11 就是主机标识,，同一网段内主机标识不能重复。")])])]),t._v(" "),a("li",[a("p",[t._v("IPv6：解决 IPv4 地址耗尽的问题而被标准化的网际协议。IPv4 的地址长度为 4 个 8 位字节，即 32 比特，而 IPv6 的地址长度则是原来的 4 倍，即 128 比特，一般写成 8 个 16 位字节。通常写成 8 组，每组为四个十六进制数的形式。比如：AD80:0000:0000:0000:ABAA:0000:00C2:0002")])])]),t._v(" "),a("h2",{attrs:{id:"四-dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四-dns"}},[t._v("#")]),t._v(" 四. DNS")]),t._v(" "),a("p",[t._v("应用层协议：DNS 协议是用来将域名转换为 IP 地址（也可以将 IP 地址转换为相应的域名地址）")]),t._v(" "),a("ul",[a("li",[t._v("DNS 使用 TCP 和 UDP 端口 53。")]),t._v(" "),a("li",[t._v("对于每一级域名长度的限制是 63 个字符，域名总长度则不能超过 253 个字符。")])]),t._v(" "),a("p",[t._v('客户端发送查询报文"query zh.wikipedia.org"至 DNS 服务器：')]),t._v(" "),a("ul",[a("li",[a("p",[t._v("DNS 服务器首先检查自身缓存，如果存在记录则直接返回结果。如果记录老化或不存在，则执行如下步骤：")])]),t._v(" "),a("li",[a("p",[t._v('DNS 服务器向根域名服务器发送查询报文"query zh.wikipedia.org"，根域名服务器返回顶级域 .org 的顶级域名服务器地址。')])]),t._v(" "),a("li",[a("p",[t._v('DNS 服务器向 .org 域的顶级域名服务器发送查询报文"query zh.wikipedia.org"，得到二级域 .wikipedia.org 的权威域名服务器地址。')])]),t._v(" "),a("li",[a("p",[t._v('DNS 服务器向 .wikipedia.org 域的权威域名服务器发送查询报文"query zh.wikipedia.org"，得到主机 zh 的 A 记录，存入自身缓存并返回给客户端。')])])]),t._v(" "),a("h2",{attrs:{id:"五-http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#五-http"}},[t._v("#")]),t._v(" 五. HTTP")]),t._v(" "),a("p",[t._v("HTTP 协议（HyperText Transfer Protocol，超⽂本传输协议）是⽤于从 WWW 服务器传输超⽂本到本地浏览器的传输协议。HTTP 是客户端浏览器或其他程序与 Web 服务器之间的应⽤层通信协议。在 Internet 上的 Web 服务器上存放的都是超⽂本信息，客户机需要通过 HTTP 协议传输所要访问的超⽂本信息。")]),t._v(" "),a("h3",{attrs:{id:"_1-一次完整的-http-通信是什么样子的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-一次完整的-http-通信是什么样子的"}},[t._v("#")]),t._v(" 1. ⼀次完整的 HTTP 通信是什么样⼦的?")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("建⽴ TCP 连接\n在 HTTP ⼯作开始之前，客户端⾸先要通过⽹络与服务器建⽴连接，该连接是通过 TCP 来完成\n的。HTTP 是⽐ TCP 更⾼层次的应⽤层协议，根据规则，只有低层协议建⽴之后，才能进⾏⾼\n层协议的连接，因此，⾸先要建⽴ TCP 连接，⼀般 TCP 连接的端⼝号是 80；")])]),t._v(" "),a("li",[a("p",[t._v("客户端向服务器发送请求命令\n⼀旦建⽴了 TCP 连接，客户端就会向服务器发送请求命令；\n例如：GET/info HTTP/1.1")])]),t._v(" "),a("li",[a("p",[t._v("客户端发送请求头信息\n客户端发送其请求命令之后，还要以头信息的形式向服务器发送⼀些别的信息，之后客户端发\n送了⼀空⽩⾏来通知服务器，它已经结束了该头信息的发送；")])]),t._v(" "),a("li",[a("p",[t._v("服务器应答\n客户端向服务器发出请求后，服务器会客户端返回响应；\n例如： HTTP/1.1 200 OK\n响应的第⼀部分是协议的版本号和响应状态码")])]),t._v(" "),a("li",[a("p",[t._v("服务器返回响应头信息\n正如客户端会随同请求发送关于⾃身的信息⼀样，服务器也会随同响应向⽤户发送关于它⾃⼰\n的数据及被请求的⽂档；")])]),t._v(" "),a("li",[a("p",[t._v("服务器向客户端发送数据\n服务器向客户端发送头信息后，它会发送⼀个空⽩⾏来表示头信息的发送到此为结束，接着，\n它就以 Content-Type 响应头信息所描述的格式发送⽤户所请求的实际数据；")])]),t._v(" "),a("li",[a("p",[t._v("服务器关闭 TCP 连接\n⼀般情况下，⼀旦服务器向客户端返回了请求数据，它就要关闭 TCP 连接，然后如果客户端\n或者服务器在其头信息加⼊了这⾏代码 Connection:keep-alive ，TCP 连接在发送后将仍然保\n持打开状态，于是，客户端可以继续通过相同的连接发送请求。保持连接节省了为每个请求建\n⽴新连接所需的时间，还节约了⽹络带宽。")])])]),t._v(" "),a("h3",{attrs:{id:"_2-http-协议有哪些特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-http-协议有哪些特点"}},[t._v("#")]),t._v(" 2. HTTP 协议有哪些特点?")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("通过请求和响应的交换达成通信\n协议规定, 请求从客户端发出, 服务端响应请求并返回.")])]),t._v(" "),a("li",[a("p",[t._v("⽆状态\nHTTP 是⼀种⽆状态协议, 在单纯 HTTP 这个层⾯，协议对于发送过的请求或响应都不做持久化处理")])]),t._v(" "),a("li",[a("p",[t._v("使⽤ Cookie 做状态管理\n服务端返回的头信息上有可能会携带 Set-Cookie, 那么当客户端接收到响应后, 就会在本地种上 cookie. 在下⼀次给服务端发送请求的时候, 就会携带上这些 cookie。")])]),t._v(" "),a("li",[a("p",[t._v("通过 URL 定位资源\n这⾥区分⼀下 URI 和 URL 的概念.\nURI: 统⼀资源标识符, ⽐如你身份证号是 xxxxxxx, 在所有⼈中是独⼀⽆⼆的, 这个身份证号就能\n标识你的身份, 那么它就是 URI\nURL: 统⼀资源定位符, ⽐如北京市/朝阳区/xxxx/xxxx/xxxxx, 通过这⼀串信息可以定位到你, 那\n么这个就是 URL\nURL 有点类似于通过定位实现的 URI.\n就像有个⽗类叫做 URI, 他要实现的是唯⼀确定⼀个 id. 有的⼈喜欢继承 URI, 通过 location 来实\n现; 有的⼈喜欢继承 URI, 通过 name 来实现.")])]),t._v(" "),a("li",[a("p",[t._v("通过各种⽅法来标识⾃⼰的意图\n这⾥指的是各种 HTTP ⽅法, ⽐如 GET POST PUT DELETE 等.")])]),t._v(" "),a("li",[a("p",[t._v("持久连接\nHTTP 协议的初始版本中，每进⾏⼀个 HTTP 通信都要断开⼀次 TCP 连接，增加了很多没必要\n的建⽴连接的开销。\n为了解决上述 TCP 连接的问题，HTTP/1.1 ⽀持持久连接。其特点是，只要任意⼀端没有明确\n提出断开连接，则保持 TCP 连接状态。旨在建⽴⼀次 TCP 连接后进⾏多次请求和响应的交\n互。在 HTTP/1.1 中，所有的连接默认都是持久连接。\n也就是说默认情况下建⽴ TCP 连接不会断开，只有在请求报头中声明 Connection: close 才会\n在请求完成后关闭连接。")])]),t._v(" "),a("li",[a("p",[t._v("管道机制\n1.1 版本引⼊ pipelining 机制, 即在同⼀个 TCP 连接⾥⾯，客户端可以同时发送多个请求。\n举例来说，客户端需要请求两个资源。以前的做法是，在同⼀个 TCP 连接⾥⾯，先发送 A 请\n求，然后等待服务器做出回应，收到后再发出 B 请求。管道机制则是允许浏览器同时发出 A 请\n求和 B 请求，但是服务器还是按照顺序，先回应 A 请求，完成后再回应 B 请求。\n但是现代浏览器⼀般没开启这个配置, 这个机制可能会造成队头阻塞. 因为响应是有顺序的, 如\n果⼀个 TCP 连接中的第⼀个 HTTP 请求响应⾮常慢, 那么就会阻塞后续 HTTP 请求的响应.\n所以现实中默认情况下, ⼀个 TCP 连接同⼀时间只发⼀个 HTTP 请求.")])])]),t._v(" "),a("p",[t._v("有的同学会问, 我怎么听说 chrome 最⼤⽀持 6 个同域名请求呢？\n那是因为"),a("strong",[t._v("chrome 最⼤⽀持同时开启 6 个 TCP 连接。")])]),t._v(" "),a("h3",{attrs:{id:"_3-http-状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-http-状态码"}},[t._v("#")]),t._v(" 3. HTTP 状态码")]),t._v(" "),a("p",[t._v("1xx: 信息性状态码，webscoket")]),t._v(" "),a("p",[t._v("2xx: 成功状态码，200、204(No Content) 、206(范围请求,⽐如⾳视频资源)")]),t._v(" "),a("p",[t._v("3xx: 重定向， 301(永久) 、302(临时，可能会改变方法) 、304(协商缓存)、 307(临时，不会从 post 变为 get) 、308(永久)")]),t._v(" "),a("p",[t._v("4xx: 客户端错误， 400(bad request) 、401(Unauthorized，无 session，未登录认证) 、403(Forbidden) 、404(not found) 、405(Method not allowed)")]),t._v(" "),a("p",[t._v("5xx: 服务端错误，500(Internal server error) 、502(Bad Gateway) 、503(Service Unavailable)")]),t._v(" "),a("h3",{attrs:{id:"_4-http-请求头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-http-请求头"}},[t._v("#")]),t._v(" 4. HTTP 请求头")]),t._v(" "),a("h4",{attrs:{id:"_1、connection"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、connection"}},[t._v("#")]),t._v(" 1、Connection")]),t._v(" "),a("p",[t._v("请求头和返回头")]),t._v(" "),a("p",[t._v("close：HTTP/1.1 版本的默认连接都是持久连接。当服务器端想明确断开连接时，则指定 Connection ⾸部字段的值为 close")]),t._v(" "),a("p",[t._v("Keep-Alive：HTTP/1.1 之前的 HTTP 版本的默认连接都是⾮持久连接。为此，如果想在旧版本的 HTTP 协议上维持持续连接，则需要指定 Connection ⾸部字段的值为 Keep-Alive。")]),t._v(" "),a("p",[t._v("#2、Allow\n返回头：⽤于通知客户端能够⽀持 Request-URI 指定资源的所有 HTTP ⽅法。")]),t._v(" "),a("p",[t._v("当服务器接收到不⽀持的 HTTP ⽅法时，会以状态码 405 Method Not Allowed 作为响应返回。与此同时，还会把所有能⽀持的 HTTP ⽅法写⼊⾸部字段 Allow 后返回。Allow: GET, HEAD。")]),t._v(" "),a("p",[t._v("#3、Host\n请求头，Host: aam.sdc.cs.icbc:11688")]),t._v(" "),a("p",[t._v("告知服务器，请求的资源所处的互联⽹主机和端⼝号。")]),t._v(" "),a("p",[t._v("Host ⾸部字段是 HTTP/1.1 规范内唯⼀⼀个必须被包含在请求内的⾸部字段。")]),t._v(" "),a("p",[t._v("若服务器未设定主机名，那直接发送⼀个空值即可 Host: 。")]),t._v(" "),a("p",[t._v("#4、Accept、Accept-Language、Accept-Encoding\n请求头")]),t._v(" "),a("p",[t._v("Accept: text/html, application/xhtml+xml, application/xml;")]),t._v(" "),a("p",[t._v("Accept ⾸部字段可通知服务器，⽤户代理能够处理的媒体类型及媒体类型的相对优先级。可使⽤ type/subtype 这种形式，⼀次指定多种媒体类型。")]),t._v(" "),a("p",[t._v("Accept-Encoding: gzip, deflate")]),t._v(" "),a("p",[t._v("Accept-Encoding ⾸部字段⽤来告知服务器⽤户代理⽀持的内容编码及内容编码的优先顺序，并可⼀次性指定多种内容编码，也可使⽤星号（*）作为通配符，指定任意的编码格式。")]),t._v(" "),a("p",[t._v("gzip 表明实体采⽤ GNU zip 编码")]),t._v(" "),a("p",[t._v("compress 表明实体采⽤ Unix 的⽂件压缩程序")]),t._v(" "),a("p",[t._v("deflate 表明实体采⽤ zlib 的格式压缩的")]),t._v(" "),a("p",[t._v("identity 表明没有对实体进⾏编码，当没有 Content-Encoding ⾸部字段时，默认采⽤此编码⽅式")]),t._v(" "),a("p",[t._v("Accept-Language: zh-cn,zh;q=0.5")]),t._v(" "),a("p",[t._v("表示浏览器所支持的语言类型，浏览器支持的语言分别是简体中文和中文，优先支持简体中文。")]),t._v(" "),a("p",[t._v("#5、Content-Encoding、Content-Type、Content-language\n响应头")]),t._v(" "),a("p",[t._v("Content-Encoding: gzip")]),t._v(" "),a("p",[t._v("告知客户端服务器对实体的主体部分选⽤的内容编码⽅式。内容编码是指在不丢失实体信息的前提下所进⾏的压缩。")]),t._v(" "),a("p",[t._v("Content-Type: text/html; charset=UTF-8")]),t._v(" "),a("p",[t._v("说明了实体主体内对象的媒体类型。和⾸部字段 Accept ⼀样，字段值⽤ type/subtype 形式赋值。")]),t._v(" "),a("p",[t._v("Content-language：zh-cn,zh;q=0.5")]),t._v(" "),a("p",[t._v("说明了实体主体内对象的语言类型")]),t._v(" "),a("p",[t._v("#6、User-Agent\n请求头")]),t._v(" "),a("p",[t._v("User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.114 Safari/537.36")]),t._v(" "),a("p",[t._v("⾸部字段 User-Agent 会将创建请求的浏览器和⽤户代理名称等信息传达给服务器。由⽹络爬⾍发起请求时，有可能会在字段内添加爬⾍作者的电⼦邮件地址。此外，如果请求经过代理，那么中间也很可能被添加上代理服务器的名称。")]),t._v(" "),a("p",[t._v("#7、Set-Cookie、Cookie\nSet-Cookie 返回头、Cookie 请求头")]),t._v(" "),a("p",[t._v("Set-Cookie: userId=11111; expires=Mon, 10 Jul 20121 15:50:06 GMT; path=/;")]),t._v(" "),a("p",[t._v("NAME=VALUE: cookie 名称和值")]),t._v(" "),a("p",[t._v("expires=DATE: Cookie 的有效期（若不明确指定则默认为浏览器关闭前为⽌）")]),t._v(" "),a("p",[t._v("path=PATH: ⽤于限制指定 Cookie 的发送范围的⽂件⽬录。")]),t._v(" "),a("p",[t._v("domain=域名: cookie 有效的域名 （若不指定则默认为创建 Cookie 的服务器的域名）")]),t._v(" "),a("p",[t._v("Secure: 仅在 HTTPS 安全通信时才会发送 Cookie")]),t._v(" "),a("p",[t._v("HttpOnly: 使 Cookie 不能被 JavaScript 脚本访问")]),t._v(" "),a("p",[t._v("#8、强缓存：Expires、Cache-Control\nExpires：返回头，这是 http1.0 时的规范，Expires: Mon, 10 Jul 2021 15:50:06 GMT")]),t._v(" "),a("p",[t._v("⾸部字段 Expires 会将资源失效的⽇期告知客户端。")]),t._v(" "),a("p",[t._v("缓存服务器在接收到含有⾸部字段 Expires 的响应后，会以缓存来应答请求，在 Expires 字段值指定的时间之前，响应的副本会⼀直被保存。当超过指定的时间后，缓存服务器在请求发送过来时，会转向源服务器请求资源。")]),t._v(" "),a("p",[t._v("Cache-Control：返回头，设置缓存机制")]),t._v(" "),a("p",[t._v("Cache-Control: public，可以被所有的用户缓存，包括终端用户和 CDN 等中间代理服务器")]),t._v(" "),a("p",[t._v("Cache-Control: private，只能被终端用户的浏览器缓存，不允许 CDN 等中继缓存服务器对其缓存")]),t._v(" "),a("p",[t._v("Cache-Control: no-cache，可以在客户端存储资源，每次都必须去服务端做过期校验，来决定从服务端获取新的资源")]),t._v(" "),a("p",[t._v("（200）还是使⽤客户端缓存（304）。也就是所谓的协商缓存。")]),t._v(" "),a("p",[t._v("Cache-Control: no-store，永远都不要在客户端存储资源，永远都去原始服务器去获取资源。")]),t._v(" "),a("p",[t._v("Cache-Control: max-age=604800（单位：秒），当客户端发送的请求中包含 max-age 指令时，如果判定缓存资源的缓存时间数值⽐指定的时间更⼩，那么客户端就接收缓存的资源。另外，当指定 max-age 的值为 0，那么缓存服务器通常需要将请求转发给源服务器。HTTP/1.1 版本的缓存服务器遇到同时存在 Expires ⾸部字段的情况时，会优先处理 max-age 指令，并忽略 Expires ⾸部字段")]),t._v(" "),a("p",[t._v("Cache-Control: s-maxage=604800（单位：秒），s-maxage 指令的功能和 max-age 指令的相同，它们的不同点是 s-maxage 指令只适⽤于供多位⽤户使⽤的公共缓存服务器（⼀般指代理）。当使⽤ s-maxage 指令后，则直接忽略对 Expires ⾸部字段及 max-age 指令的处理")]),t._v(" "),a("p",[t._v("#9、协商缓存：ETag、If-None-Match、Last-Modified、If-Modified-Since\nIf-Modified-Since: Mon, 10 Jul 2021 15:50:06 GMT，请求头。")]),t._v(" "),a("p",[t._v("⽤于确认代理或客户端拥有的本地资源的有效性。\n在指定 If-Modified-Since 字段值的⽇期时间之后，如果请求的资源都没有过更新，则返回状态码 304 Not Modified 的响应\nIf-None-Match: “lubai”，请求头。⽤于指定 If-None-Match 字段值的实体标记（ETag）值与请求资源的 ETag 不⼀致时，它就告")]),t._v(" "),a("p",[t._v("知服务器处理该请求。")]),t._v(" "),a("p",[t._v("ETag: “aaaa-1234”，返回头，⾸部字段 ETag 能告知客户端实体标识。它是⼀种可将资源以字符串形式做唯⼀性标识的⽅式。服务器会为每份资源分配对应的 ETag 值。另外，当资源更新时，ETag 值也需要更新。⽣成 ETag 值时，并没有统⼀的算法规则，⽽仅仅是由服务器来分配。")]),t._v(" "),a("p",[t._v("Last-Modified : Fri , 12 May 2006 18:53:33 GMT，返回头。在浏览器第一次请求某一个 URL 时，服务器端的返回状态会是 200，内容是客户端请求的资源，同时有一个 Last-Modified 的属性标记此文件在服务器端最后被修改的时间。")]),t._v(" "),a("h2",{attrs:{id:"六-网络和并发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#六-网络和并发"}},[t._v("#")]),t._v(" 六. 网络和并发")]),t._v(" "),a("h3",{attrs:{id:"_1-http-1-0-1-1-2-0-在并发请求上主要区别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-1-0-1-1-2-0-在并发请求上主要区别是什么"}},[t._v("#")]),t._v(" 1. HTTP 1.0/1.1/2.0 在并发请求上主要区别是什么?")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("HTTP/1.0\n每次"),a("code",[t._v("TCP连接")]),t._v("只能发送⼀个请求，当服务器响应后就会关闭这次连接，下⼀个请求需要再次建\n⽴ TCP 连接.")])]),t._v(" "),a("li",[a("p",[t._v("HTTP/1.1")])])]),t._v(" "),a("ul",[a("li",[t._v("默认采⽤持续连接(TCP 连接默认不关闭，可以被多个请求复⽤，不⽤声明 Connection: keep-alive).")]),t._v(" "),a("li",[t._v("增加了管道机制，在同⼀个 TCP 连接⾥，允许多个请求同时发送，增加了并发性，进⼀步改善\n了 HTTP 协议的效率\n但是同⼀个 TCP 连接⾥，所有的数据通信是按次序进⾏的。回应慢，会有许多请求排队，造成”队头堵塞”。 (一问一答)")])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[t._v("HTTP/2.0")])]),t._v(" "),a("ul",[a("li",[t._v("加了双⼯模式，即不仅客户端能够同时发送多个请求，服务端也能同时处理多个请求，解决了队头堵塞的问题。")]),t._v(" "),a("li",[t._v("使⽤了多路复⽤的技术，做到同⼀个连接并发处理多个请求，⽽且并发请求的数量⽐ HTTP1.1\n⼤了好⼏个数量级。")]),t._v(" "),a("li",[t._v("增加服务器推送的功能，不经请求服务端主动向客户端发送数据。")])]),t._v(" "),a("h3",{attrs:{id:"_2-http-1-1-长连接和-http-2-0-的多路复用技术有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-http-1-1-长连接和-http-2-0-的多路复用技术有什么区别"}},[t._v("#")]),t._v(" 2. HTTP/1.1 长连接和 HTTP/2.0 的多路复用技术有什么区别?")]),t._v(" "),a("p",[t._v("1.1: 同一时间一个 TCP 连接只能处理一个请求, 采用一问一答的形式. 上一个请求响应后才能处理下一个请求.")]),t._v(" "),a("p",[t._v("chrome 浏览器支持最大 6 个同域名请求的并发\n因为 chrome 浏览器支持最大开启 6 个 TCP 连接")]),t._v(" "),a("p",[t._v("2.0: 同域名上的所有请求都在单个 TCP 连接上完成. 单个连接上可以并行交错的进行请求和响应.")]),t._v(" "),a("h3",{attrs:{id:"_3-为什么-http-1-1-不能实现多路复用呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-为什么-http-1-1-不能实现多路复用呢"}},[t._v("#")]),t._v(" 3. 为什么 HTTP/1.1 不能实现多路复用呢?")]),t._v(" "),a("p",[t._v("HTTP/2.0 是基于二进制帧的协议, HTTP/1.1 是基于文本分隔解析的协议.")]),t._v(" "),a("p",[t._v("1.1 的报文结构里, 服务器需要不断地读入字节, 直到遇到换行符.\n处理的顺序是串行的, 一个请求和一个响应需要通过一问一答的形式才能对应起来.")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("Accept")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("text"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("html"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("application"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xhtml"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("xml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("application"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xml"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("q"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0.9")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("image"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("webp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("image"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("apng"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*;q=0.8\nAccept-Encoding:gzip, deflate, br\nAccept-Language:zh-CN,zh;q=0.9,en;q=0.8\nCache-Control:max-age=0\nConnection:keep-alive\nHost:www.imooc.com\nReferer:https://www.baidu.com/\n")])])])]),a("p",[t._v("2.0 以帧为最小数据单位, 每个帧都会标识自己属于哪个流, 多个帧组成一个流.")]),t._v(" "),a("p",[t._v("多路复用, 其实就是一个 TCP 里存在多条流")]),t._v(" "),a("h2",{attrs:{id:"七-nodejs-网络模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#七-nodejs-网络模块"}},[t._v("#")]),t._v(" 七. Nodejs 网络模块")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("socket 套接字，socket 是在应用层和传输层之间的一个抽象层，它把 TCP/IP 层复杂的操作抽象为几个简单的接口供应用层调用，来实现进程在网络中通信，比如 create，listen，accept，connect，read 和 write 等等。")])]),t._v(" "),a("li",[a("p",[t._v("http 为应用层模块，主要按照特定协议编解码数据；")])]),t._v(" "),a("li",[a("p",[t._v("net 为传输层模块，主要负责传输编码后的应用层数据；")])]),t._v(" "),a("li",[a("p",[t._v("https 是个综合模块（涵盖了 http/tls/crypto 等），主要用于确保数据安全性")])])]),t._v(" "),a("h3",{attrs:{id:"_1-tcp-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-tcp-模块"}},[t._v("#")]),t._v(" 1. TCP 模块")]),t._v(" "),a("ul",[a("li",[t._v("tcp 客户端")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" net "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'net'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HOST")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'127.0.0.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7777")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个TCP服务器实例，调用listen函数开始监听指定端口")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// net.createServer()有一个参数, 是监听连接建立的回调")]),t._v("\nnet\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("socket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" remoteName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("socket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remoteAddress"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("socket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remotePort"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 建立成功了一个连接, 这个回调函数里返回一个socket对象.")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("remoteName"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" 连接到本服务器")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收消息")]),t._v("\n    socket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("remoteName"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" - ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给客户端发消息")]),t._v("\n      socket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("你刚才说啥？是")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("吗？")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭")]),t._v("\n    socket"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'close'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("remoteName"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" 连接关闭")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HOST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Server listening on ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HOST")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("tcp 服务端")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" net "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'net'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HOST")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'127.0.0.1'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7777")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" client "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("net"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Socket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" ServerName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HOST")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\nclient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("connect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("PORT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HOST")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("成功连接到 ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("ServerName"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 向服务端发送数据")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" timer "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我没事了, 告辞'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("clearInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    client"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'⻢冬梅'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 接收消息")]),t._v("\nclient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("ServerName"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" - ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭连接")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// client.destroy();")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭事件")]),t._v("\nclient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'close'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Connection closed'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nclient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'error'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("error")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_2-udp-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-udp-模块"}},[t._v("#")]),t._v(" 2. UDP 模块")]),t._v(" "),a("ul",[a("li",[t._v("服务端")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dgram "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dgram'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" server "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dgram"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createSocket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'udp4'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" remote")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("remote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("remote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(" - ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("msg"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("收到！")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" remote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" remote"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nserver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'listening'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" address "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" server"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("address")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Server listening on ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("address"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("address"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("44444")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("客户端")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" dgram "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'dgram'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" message "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("alloc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'lubai'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" client "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dgram"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createSocket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'udp4'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nclient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("44444")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'localhost'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("err"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bytes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("发送成功")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("bytes"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("字节")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// client.close()")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nclient"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("buffer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("buffer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_3-http-模块"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-http-模块"}},[t._v("#")]),t._v(" 3. HTTP 模块")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//server")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nhttp\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'Content-Type'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/plain'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'127.0.0.1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Server running at http://127.0.0.1:80/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//client")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" options "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("hostname")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'127.0.0.1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'GET'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" req "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("request")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Status=")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("statusCode"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(", Headers=$ {JSON.stringify(res.headers)}")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setEncoding")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utf8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'data'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nreq"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//浏览器访问：http://127.0.0.1:80/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//curl访问：curl -v http://127.0.0.1:80")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 三次握⼿")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Rebuilt "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("URL")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("to")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" http"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex"}},[a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("127.0.0.1:80")]),a("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Trying "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TCP_NODELAY")]),t._v(" set\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" Connected to "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" port "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("#"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 客户端向服务端发送请求报⽂")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GET")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HTTP")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Host"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" User"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("Agent"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" curl"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7.54")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" Accept"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n>\n\n// 服务端响应客户端内容\n< HTTP/1.1 200 OK\n< Content-Type: text/plain\n< Date: Wed, 04 Aug 2021 15:55:55 GMT\n< Connection: keep-alive\n< Keep-Alive: timeout=5\n< Transfer-Encoding: chunked\n<\n* Connection #0 to host 127.0.0.1 left intact\nHello World%\n\n")])])])]),a("h3",{attrs:{id:"_4-rpc调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-rpc调用"}},[t._v("#")]),t._v(" 4. rpc调用")]),t._v(" "),a("p",[t._v("Remote Procedure Call(远程过程调⽤)")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("与http调⽤的区别")]),t._v(" "),a("ul",[a("li",[t._v("不⼀定使⽤ DNS 作为寻址服务，可使用内部协议存储\n"),a("ul",[a("li",[t._v("http传输时：http://test.com/aa -> ip")]),t._v(" "),a("li",[t._v("rpc传输时：可使用内部协议存储，v1://dd.ccc -> ip")])])]),t._v(" "),a("li",[t._v("基于TCP或UDP协议")]),t._v(" "),a("li",[t._v("使⽤⼆进制协议(更⼩的体积，更快的解码速率)\n"),a("ul",[a("li",[t._v("http传输时：明文一般为json格式")]),t._v(" "),a("li",[t._v("使用二进制，eg：定义1-4位为name、5-9位为age，使用buffer库进行解析，也可使用protocol-buffers库进行处理，像使⽤JSON⼀样简单")])])])])]),t._v(" "),a("li",[a("p",[t._v("tcp通信⽅式")]),t._v(" "),a("ul",[a("li",[t._v("单⼯：只能由一方向另一方发送数据另一方不可以，客户端向服务端发送数据或服务端向客户端发送数据")]),t._v(" "),a("li",[t._v("半双⼯：独木桥，双向都可发送数据，但每次只能传输一种数据，客户端向服务端发送数据后，服务端向客户端发送数据")]),t._v(" "),a("li",[t._v("全双⼯：双方可同时发送数据\n"),a("ul",[a("li",[t._v("错乱问题、粘包")]),t._v(" "),a("li",[t._v("制定了⼀条协议规则，即 包序号（1-2字节）+ 包⻓度（3-6字节） + 包主体内容。")])])])])])]),t._v(" "),a("h2",{attrs:{id:"八-网络部署及应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#八-网络部署及应用"}},[t._v("#")]),t._v(" 八. 网络部署及应用")]),t._v(" "),a("p",[t._v("使用阿里云服务器，基于linux系统：")]),t._v(" "),a("h3",{attrs:{id:"_1-下载安装包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-下载安装包"}},[t._v("#")]),t._v(" 1. 下载安装包")]),t._v(" "),a("p",[a("code",[t._v("wget https://nodejs.org/dist/v10.9.0/node-v10.9.0-linux-x64.tar.xz")])]),t._v(" "),a("h3",{attrs:{id:"_2-解压"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-解压"}},[t._v("#")]),t._v(" 2. 解压")]),t._v(" "),a("p",[a("code",[t._v("tar xf node-v10.9.0-linux-x64.tar.xz")])]),t._v(" "),a("h3",{attrs:{id:"_3-设置软链接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-设置软链接"}},[t._v("#")]),t._v(" 3. 设置软链接")]),t._v(" "),a("p",[a("code",[t._v("ln -s /root/node-v10.9.0-linux-x64/bin/node /usr/local/bin/node ln -s /root/node-v10.9.0-linux-x64/bin/npm /usr/local/bin/npm")])]),t._v(" "),a("h3",{attrs:{id:"_4-查看node版本和npm版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-查看node版本和npm版本"}},[t._v("#")]),t._v(" 4. 查看Node版本和npm版本")]),t._v(" "),a("p",[a("code",[t._v("node -v")]),t._v(" "),a("code",[t._v("npm -v")])]),t._v(" "),a("h3",{attrs:{id:"_5-设置npm-淘宝源"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-设置npm-淘宝源"}},[t._v("#")]),t._v(" 5. 设置npm 淘宝源")]),t._v(" "),a("p",[a("code",[t._v("npm config set registry https://registry.npm.taobao.org")])]),t._v(" "),a("h3",{attrs:{id:"_6-服务器安装pm2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-服务器安装pm2"}},[t._v("#")]),t._v(" 6. 服务器安装pm2")]),t._v(" "),a("p",[t._v("PM2 是一个带有负载均衡功能的 Node 应用进程管理器")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("npm install "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("g pm2 \n\nln "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("root"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("v10"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("9.0")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("linux"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("x64"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pm2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("\n")])])]),a("h3",{attrs:{id:"_7-配置ssh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-配置ssh"}},[t._v("#")]),t._v(" 7. 配置ssh")]),t._v(" "),a("ul",[a("li",[t._v("本地生成秘钥对: "),a("code",[t._v("ssh-keygen -t rsa")]),t._v(" demo_id_rsa")]),t._v(" "),a("li",[t._v("将公钥放到服务器上: "),a("code",[t._v("scp ~/.ssh/demo_id_rsa.pub root@39.107.238.161:/root/.ssh/authorized_keys")])]),t._v(" "),a("li",[t._v("修改ssh配置 "),a("code",[t._v("vi ~/.ssh/config")])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Host lubai\nHostName 39.107.238.161\nUser root\nPort 22\nIdentityFile ~/.ssh/demo_id_rsa\n")])])]),a("ul",[a("li",[t._v("服务器上修改ssh配置 "),a("code",[t._v("vim /etc/ssh/sshd_config")])])]),t._v(" "),a("p",[t._v("PubkeyAuthentication yes AuthorizedKeysFile .ssh/authorized_keys")]),t._v(" "),a("ul",[a("li",[t._v("最后就可以ssh登录了!\n"),a("code",[t._v("ssh xx")])])]),t._v(" "),a("h3",{attrs:{id:"_8-将本地代码同步到服务器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-将本地代码同步到服务器"}},[t._v("#")]),t._v(" 8. 将本地代码同步到服务器")]),t._v(" "),a("p",[t._v("rsync是linux可以实现增量备份的工具")]),t._v(" "),a("p",[a("code",[t._v('rsync -avzp -e "ssh" ./Internet/ lubai:/root/app')])]),t._v(" "),a("h3",{attrs:{id:"_9-服务器上启动http"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-服务器上启动http"}},[t._v("#")]),t._v(" 9. 服务器上启动http")]),t._v(" "),a("p",[a("code",[t._v("pm2 start /root/app/http-server.js")])]),t._v(" "),a("h3",{attrs:{id:"_10-本地修改发布命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-本地修改发布命令"}},[t._v("#")]),t._v(" 10. 本地修改发布命令")]),t._v(" "),a("h4",{attrs:{id:"_10-1-新建deploy-sh文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-新建deploy-sh文件"}},[t._v("#")]),t._v(" 10.1 新建deploy.sh文件")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token shebang important"}},[t._v("#!/bin/bash")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("xx\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("rsync")]),t._v(" -avzp -e "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ssh"')]),t._v(" ./Internet/ "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$HOST")]),t._v(":/root/app\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$HOST")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pm2 restart /root/app/http-server.js"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("echo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'deploy success'")]),t._v("\n")])])]),a("h4",{attrs:{id:"_10-2-初始化npm命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-初始化npm命令"}},[t._v("#")]),t._v(" 10.2 初始化npm命令")]),t._v(" "),a("p",[a("code",[t._v("npm init")]),t._v('，新增 scripts "deploy": "./deploy.sh"')]),t._v(" "),a("h4",{attrs:{id:"_10-3-发布"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-发布"}},[t._v("#")]),t._v(" 10.3 发布")]),t._v(" "),a("p",[a("code",[t._v("npm run deploy")])]),t._v(" "),a("h3",{attrs:{id:"_11-修改http-server的监听host"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-修改http-server的监听host"}},[t._v("#")]),t._v(" 11. 修改http-server的监听host")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" http "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" host "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0.0.0.0'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" port "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nhttp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("req"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'Content-Type'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/plain'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    res"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello World'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" host"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("Server running at http://")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("host"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("port"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("h3",{attrs:{id:"_12-ecs安全组添加80端口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-ecs安全组添加80端口"}},[t._v("#")]),t._v(" 12. ECS安全组添加80端口")]),t._v(" "),a("h3",{attrs:{id:"_13-查看服务器上是否已正常监听80端口-netstat-tpln"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-查看服务器上是否已正常监听80端口-netstat-tpln"}},[t._v("#")]),t._v(" 13. 查看服务器上是否已正常监听80端口 "),a("code",[t._v("netstat -tpln")])]),t._v(" "),a("h3",{attrs:{id:"_14-通过ip-端口访问-39-107-238-161-80"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-通过ip-端口访问-39-107-238-161-80"}},[t._v("#")]),t._v(" 14. 通过ip+端口访问：39.107.238.161:80")])])}),[],!1,null,null,null);s.default=e.exports}}]);